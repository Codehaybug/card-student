#!/bin/bash

# Student ID Card API - Auto Setup for Vercel
echo "🎓 Student ID Card API - Auto Setup for Vercel"
echo "================================================"

# Màu sắc cho output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Check if git is installed
if ! command -v git &> /dev/null; then
    echo -e "${RED}❌ Git chưa được cài đặt!${NC}"
    exit 1
fi

# Check if npm is installed
if ! command -v npm &> /dev/null; then
    echo -e "${RED}❌ npm chưa được cài đặt!${NC}"
    exit 1
fi

# Project name
PROJECT_NAME="student-id-vercel"
echo -e "${BLUE}📁 Tạo project: ${PROJECT_NAME}${NC}"

# Create project directory
if [ -d "$PROJECT_NAME" ]; then
    echo -e "${YELLOW}⚠️  Thư mục ${PROJECT_NAME} đã tồn tại!${NC}"
    read -p "Bạn có muốn xóa và tạo lại? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        rm -rf "$PROJECT_NAME"
    else
        echo -e "${RED}❌ Setup bị hủy${NC}"
        exit 1
    fi
fi

mkdir "$PROJECT_NAME"
cd "$PROJECT_NAME"

echo -e "${GREEN}✅ Đã tạo thư mục project${NC}"

# Initialize git
git init
echo -e "${GREEN}✅ Đã khởi tạo git${NC}"

# Create directory structure
mkdir -p api
echo -e "${GREEN}✅ Đã tạo cấu trúc thư mục${NC}"

# Create package.json
echo -e "${BLUE}📝 Tạo package.json...${NC}"
cat > package.json << 'EOF'
{
  "name": "student-id-card-vercel",
  "version": "1.0.0",
  "description": "Student ID Card Generator API for Vercel",
  "main": "api/generate-card.js",
  "type": "module",
  "scripts": {
    "dev": "vercel dev",
    "build": "echo 'No build step required'",
    "start": "vercel --prod"
  },
  "keywords": [
    "student-id",
    "card-generator", 
    "vercel",
    "api",
    "puppeteer"
  ],
  "author": "Your Name",
  "license": "MIT",
  "dependencies": {
    "chrome-aws-lambda": "^10.1.0",
    "puppeteer-core": "^21.5.2"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
EOF

# Create vercel.json
echo -e "${BLUE}⚙️  Tạo vercel.json...${NC}"
cat > vercel.json << 'EOF'
{
  "version": 2,
  "functions": {
    "api/generate-card.js": {
      "maxDuration": 30
    },
    "api/random-info.js": {
      "maxDuration": 10
    }
  },
  "headers": [
    {
      "source": "/api/(.*)",
      "headers": [
        {
          "key": "Access-Control-Allow-Origin",
          "value": "*"
        },
        {
          "key": "Access-Control-Allow-Methods", 
          "value": "GET, POST, OPTIONS"
        },
        {
          "key": "Access-Control-Allow-Headers",
          "value": "X-Requested-With, Content-Type, Authorization"
        }
      ]
    }
  ],
  "rewrites": [
    {
      "source": "/",
      "destination": "/api/docs"
    }
  ]
}
EOF

# Create .gitignore
echo -e "${BLUE}🚫 Tạo .gitignore...${NC}"
cat > .gitignore << 'EOF'
node_modules/
.env
.env.local
.env.production.local
.vercel
*.log
.DS_Store
EOF

# Create main API files (simplified versions due to script limitations)
echo -e "${BLUE}🚀 Tạo API files...${NC}"

# Generate basic structure for API files
echo "// Generated by setup script - Please replace with full version from artifacts" > api/generate-card.js
echo "// Generated by setup script - Please replace with full version from artifacts" > api/random-info.js
echo "// Generated by setup script - Please replace with full version from artifacts" > api/docs.js

# Create README
echo -e "${BLUE}📖 Tạo README.md...${NC}"
cat > README.md << 'EOF'
# Student ID Card Generator API

🎓 API tạo thẻ sinh viên với thông tin random hoặc tùy chỉnh, tối ưu cho Vercel.

## 🚀 Deploy lên Vercel

1. **Thay thế API files:**
   - Copy nội dung từ artifacts vào `api/generate-card.js`
   - Copy nội dung từ artifacts vào `api/random-info.js`  
   - Copy nội dung từ artifacts vào `api/docs.js`

2. **Deploy:**
   ```bash
   npm install -g vercel
   vercel
   ```

## 📋 API Endpoints

- `GET /api/generate-card` - Tạo thẻ random
- `POST /api/generate-card` - Tạo thẻ tùy chỉnh
- `GET /api/random-info` - Lấy thông tin random
- `GET /` - Documentation

## 🔧 Local Development

```bash
npm install
vercel dev
```

## 📞 Support

Xem documentation đầy đủ trong artifacts!
EOF

# Initialize git commit
echo -e "${BLUE}📝 Tạo initial commit...${NC}"
git add .
git commit -m "Initial setup with basic structure

- Added package.json with Vercel-optimized dependencies
- Added vercel.json with serverless function configs
- Created API folder structure
- Added .gitignore and README

Next steps:
1. Replace API files with full versions from artifacts
2. Deploy to Vercel"

echo -e "${GREEN}✅ Setup hoàn thành!${NC}"
echo
echo -e "${YELLOW}📋 Các bước tiếp theo:${NC}"
echo -e "${BLUE}1.${NC} cd $PROJECT_NAME"
echo -e "${BLUE}2.${NC} Thay thế nội dung trong api/ bằng code từ artifacts"
echo -e "${BLUE}3.${NC} npm install -g vercel (nếu chưa có)"
echo -e "${BLUE}4.${NC} vercel (để deploy)"
echo
echo -e "${YELLOW}🔗 Hoặc push lên GitHub và import vào Vercel:${NC}"
echo -e "${BLUE}1.${NC} Tạo repo mới trên GitHub"
echo -e "${BLUE}2.${NC} git remote add origin <your-repo-url>"
echo -e "${BLUE}3.${NC} git push -u origin main"
echo -e "${BLUE}4.${NC} Import repo trong Vercel dashboard"
echo
echo -e "${GREEN}🎉 Happy coding!${NC}"
